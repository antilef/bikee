plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "6.0.1.5171"
}

group = 'cl.antilef'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-inline:5.0.0'  // Mockito inline mock maker for tests
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()

	jvmArgs "-XX:+EnableDynamicAgentLoading"
}
jacoco {
	toolVersion = '0.8.10' // Replace with the latest version
}

tasks.jacocoTestReport {
	dependsOn test // Ensure tests run before generating the report
	reports {
		xml.required = true    // Enable XML report (useful for CI tools like SonarQube)
		csv.required = false   // Disable CSV report if not needed
		html.required = true   // Enable HTML report for local inspection
	}
}
sonarqube {
	properties {
		property "sonar.projectKey", "bikker"
		property "sonar.host.url", "http://localhost:9000" // URL of your SonarQube server
		property "sonar.login", "sqp_d2854e8c0e6a44edec932f8c9f1e57924e678ce2" // Authentication token
		property "sonar.sources", "src/main/java" // Path to source files
		property "sonar.tests", "src/test/java" // Path to test files
		property "sonar.java.binaries", "build/classes" // Path to compiled classes
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}